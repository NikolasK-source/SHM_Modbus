#!/bin/bash

VERSION="2.1.0"

SLEEP_TIME=2

# https://stackoverflow.com/questions/4774054/reliable-way-for-a-bash-script-to-get-the-full-path-to-itself/4774063
SCRIPTPATH="$( cd "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"

EXEC_COMMANDS=( \
    "modbus-tcp-client-shm" \
    "modbus-rtu-client-shm" \
    "dump-shm" \
    "write-shm" \
    "stdin-to-modbus-shm" \
    "shared-mem-random" \
    "shm-modbus-signal-gen" \
    "wago-modbus-coupler-shm" \
    "shm-modbus-gui" \
    "shm-format" \
)

arg_count=$#

function start_gui {
    if [[ -x "$SCRIPTPATH/shm-modbus-gui" ]]; then
        $SCRIPTPATH/shm-modbus-gui "${@:2}"
    elif [[ -x "/bin/$cmd" ]]; then
        /bin/shm-modbus-gui "${@:2}"
    elif [[ -x "/usr/bin/$cmd" ]]; then
        /usr/bin/shm-modbus-gui "${@:2}"
    elif [[ -x "/snap/bin/shm-modbus.$cmd" ]]; then
        /snap/bin/shm-modbus.shm-modbus-gui "${@:2}"
    else
        # try to execute from path
        shm-modbus-gui "${@:2}"
    fi

    exit $?
}

if [[ ( "$arg_count" < 1 ) ]] ; then
    start_gui
fi

trap "exit 0" INT TERM

command=$1

function print_help {
    echo "usage: $(basename "$0") [OPTION] command [CMD_OPTION..]"
    echo ""
    echo "  This script is a launcher script for several Modbus client simulator programs."
    echo "  Use --help as argument for commands to get more information about the usage of the program."
    echo ""
    echo "  options:"
    echo "    -h --help                 show this message"
    echo "    --help-all                show usage message of all Mosbus tools"
    echo "    --gui                     start GUI (default)"
    echo "    --version                 show version of this script"
    echo "    --version-all             show version of all Mosbus tools"
    echo ""
    echo "  commands:"
    for cmd in "${EXEC_COMMANDS[@]}"
    do
        printf '    %-25s execute %s with the given arguments' "$cmd" "$cmd"
        echo ""
    done
}

if [ "$command" = "--help" ] || [ "$command" = "-h" ]; then
    print_help
    exit 0
fi

if [ "$command" = "--gui" ]; then
    start_gui
fi

if [ "$command" = "--help-all" ]; then
    echo "===============> modbus-shm <==============="
    print_help
    echo ""
    echo ""

    for cmd in "${EXEC_COMMANDS[@]}"
    do
        echo "===============> $cmd <==============="

        if [[ -x "$SCRIPTPATH/$cmd" ]]; then
            $SCRIPTPATH/$cmd --help
        elif [[ -x "/bin/$cmd" ]]; then
            /bin/$cmd --help
        elif [[ -x "/usr/bin/$cmd" ]]; then
            /usr/bin/$cmd --help
        elif [[ -x "/snap/bin/shm-modbus.$cmd" ]]; then
            /snap/bin/shm-modbus.$cmd --help
        else
           # try to execute from path
           $cmd --help
        fi
        
        echo ""
        echo ""
    done
    exit 0
fi

if [ "$command" = "--version" ]; then
    echo "modbus-shm $VERSION"
    exit 0
fi

if [ "$command" = "--version-all" ]; then
    echo "modbus-shm $VERSION"
    for cmd in "${EXEC_COMMANDS[@]}"
    do
        printf "  > "

        if [ $cmd = "shm-modbus-signal-gen" ]; then
            printf "$cmd "
        fi

        if [[ -x "$SCRIPTPATH/$cmd" ]]; then
            $SCRIPTPATH/$cmd --version
        elif [[ -x "/bin/$cmd" ]]; then
            /bin/$cmd --version
        elif [[ -x "/usr/bin/$cmd" ]]; then
            /usr/bin/$cmd --version
        elif [[ -x "/snap/bin/shm-modbus.$cmd" ]]; then
            /snap/bin/shm-modbus.$cmd --version
        else
           # try to execute from path
           $cmd --version
        fi
        
    done
    exit 0
fi

# for compatibility reasons, may be removed in future version
if [ "$command" = "signal-gen" ]; then
    command="shm-modbus-signal-gen"
fi

for cmd in "${EXEC_COMMANDS[@]}"
do
    if [ "$command" = "$cmd" ]; then
        trap "" INT TERM

        if [[ -x "$SCRIPTPATH/$command" ]]; then
            $SCRIPTPATH/$command "${@:2}"
        elif [[ -x "/bin/$cmd" ]]; then
            /bin/$command "${@:2}"
        elif [[ -x "/usr/bin/$cmd" ]]; then
            /usr/bin/$command "${@:2}"
        elif [[ -x "/snap/bin/shm-modbus.$cmd" ]]; then
            /snap/bin/shm-modbus.$command "${@:2}"
        else
           # try to execute from path
           $command "${@:2}"
        fi

        exit $?
    fi
done

>&2 echo "unknown command: $command"
exit 64
